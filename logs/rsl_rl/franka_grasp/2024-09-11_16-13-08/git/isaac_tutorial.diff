--- git status ---
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   examples/lab/custom_asset.py
	modified:   examples/lab/dqn_cartpole/dqn.py
	deleted:    examples/lab/franka.py
	modified:   examples/lab/lab_assets/__init__.py
	deleted:    examples/lab/lab_assets/franka.py
	modified:   examples/lab/lab_assets/manipulators/franka/franka.py
	modified:   examples/lab/lab_tasks/direct/cartpole/__init__.py
	modified:   examples/lab/lab_tasks/direct/cartpole/agents/sb3_ppo_cfg.yaml
	modified:   examples/lab/lab_tasks/manager_based/franka/config/franka/__init__.py
	modified:   examples/lab/lab_tasks/manager_based/franka/config/franka/agents/rsl_rl_cfg.py
	modified:   examples/lab/lab_tasks/manager_based/franka/config/franka/ik_abs_env_cfg.py
	modified:   examples/lab/lab_tasks/manager_based/franka/config/franka/ik_rel_env_cfg.py
	modified:   examples/lab/lab_tasks/manager_based/franka/config/franka/joint_pos_env_cfg.py
	modified:   examples/lab/workflows/sb3/play.py
	modified:   examples/lab/workflows/sb3/train.py
	modified:   usd/duck/config.yaml
	modified:   usd/franka/.asset_hash
	modified:   usd/franka/Props/instanceable_meshes.usd
	modified:   usd/franka/config.yaml
	modified:   usd/franka/franka_panda.usd

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	examples/lab/lab_assets/manipulators/franka/__init__.py
	examples/lab/lab_tasks/direct/cartpole/agents/sb3_a2c_cfg.yaml
	examples/lab/lab_tasks/direct/cartpole/agents/sb3_sac_cfg.yaml
	examples/lab/lab_tasks/direct/cartpole/agents/sb3_td3_cfg.yaml

no changes added to commit (use "git add" and/or "git commit -a") 


--- git diff ---
diff --git a/examples/lab/custom_asset.py b/examples/lab/custom_asset.py
index e8b1f56..2c14225 100644
--- a/examples/lab/custom_asset.py
+++ b/examples/lab/custom_asset.py
@@ -18,7 +18,7 @@ import torch
 import omni.isaac.core.utils.prims as prim_utils
 import omni.isaac.lab.sim as sim_utils
 from omni.isaac.lab.assets import Articulation
-from franka import FRANKA_PANDA_CFG
+from lab_assets.manipulators.franka.franka import FRANKA_PANDA_CFG
 
 def design_scene() -> dict[str, Articulation]:
     """Designs the scene."""
diff --git a/examples/lab/dqn_cartpole/dqn.py b/examples/lab/dqn_cartpole/dqn.py
index 30e0503..f3520a2 100644
--- a/examples/lab/dqn_cartpole/dqn.py
+++ b/examples/lab/dqn_cartpole/dqn.py
@@ -20,13 +20,6 @@ class Net(nn.Module):
     def forward(self, x):
         return self.net(x)
 
-# some useful functions
-def soft_update(net, net_target, tau):
-    # update target network with momentum (for approximating ground-truth Q-values)
-    for param_target, param in zip(net_target.parameters(), net.parameters()):
-        param_target.data.copy_(param_target.data * tau + param.data * (1.0 - tau))
-
-
 class DQN:
     def __init__(self, args):
         self.args = args
@@ -48,10 +41,16 @@ class DQN:
         # define Q-network
         self.q        = Net(num_act=self.act_space).to(self.args.sim_device)
         self.q_target = Net(num_act=self.act_space).to(self.args.sim_device)
-        soft_update(self.q, self.q_target, tau=0.0)
+        self.soft_update(self.q, self.q_target, tau=0.0)
         self.q_target.eval()
         self.optimizer = torch.optim.Adam(self.q.parameters(), lr=self.lr)
 
+    # some useful functions
+    def soft_update(self, net, net_target, tau):
+        # update target network with momentum (for approximating ground-truth Q-values)
+        for param_target, param in zip(net_target.parameters(), net.parameters()):
+            param_target.data.copy_(param_target.data * tau + param.data * (1.0 - tau))
+
     def compute_loss(self):
         # policy update using TD loss
         self.optimizer.zero_grad()
@@ -70,11 +69,15 @@ class DQN:
         self.optimizer.step()
 
         # soft update target networks
-        soft_update(self.q, self.q_target, self.tau)
+        self.soft_update(self.q, self.q_target, self.tau)
         return loss
 
-    def _select_action(self, obs, epsilon=0.0):
-        coin = torch.rand(self.args.num_envs, device=self.args.sim_device) < epsilon
+    def select_action(self, obs):
+        # linear annealing from 0.8 to 0.01 over 20k steps
+        self.epsilon = max(0.01, 0.8 - 0.01 * (self.run_step / 20))
+
+        # collect data
+        coin = torch.rand(self.args.num_envs, device=self.args.sim_device) < self.epsilon
 
         rand_act = torch.rand(self.args.num_envs, device=self.args.sim_device)
         with torch.no_grad():
@@ -86,14 +89,8 @@ class DQN:
         # choose random action or policy action
         act = coin.float() * rand_act + (1 - coin.float()) * true_act
         clip_act = 2 * (act - 0.5)  # maps to -1 to 1
-        return clip_act.view(-1,1)
+        action = clip_act.view(-1,1)
 
-    def select_action(self, observations):
-        # linear annealing from 0.8 to 0.01 over 20k steps
-        self.epsilon = max(0.01, 0.8 - 0.01 * (self.run_step / 20))
-
-        # collect data
-        action = self._select_action(observations, self.epsilon)
         return action
 
     def update(self, action, next_obs, obs, reward, done):
diff --git a/examples/lab/franka.py b/examples/lab/franka.py
deleted file mode 100644
index 858a962..0000000
--- a/examples/lab/franka.py
+++ /dev/null
@@ -1,60 +0,0 @@
-import omni.isaac.lab.sim as sim_utils
-from omni.isaac.lab.actuators import ImplicitActuatorCfg
-from omni.isaac.lab.assets.articulation import ArticulationCfg
-import os
-
-ISAAC_TUTORIAL_DIR = os.path.join(os.path.dirname(os.path.realpath(__file__)), "../../")
-
-FRANKA_PANDA_CFG = ArticulationCfg(
-    spawn=sim_utils.UsdFileCfg(
-        usd_path=f"{ISAAC_TUTORIAL_DIR}/usd/franka/franka_panda.usd",
-        activate_contact_sensors=False,
-        rigid_props=sim_utils.RigidBodyPropertiesCfg(
-            disable_gravity=False,
-            max_depenetration_velocity=5.0,
-        ),
-        articulation_props=sim_utils.ArticulationRootPropertiesCfg(
-            enabled_self_collisions=True,
-            solver_position_iteration_count=8,
-            solver_velocity_iteration_count=0
-        ),
-        # collision_props=sim_utils.CollisionPropertiesCfg(contact_offset=0.005,
-        #     rest_offset=0.0),
-    ),
-    init_state=ArticulationCfg.InitialStateCfg(
-        joint_pos={
-            "panda_joint1": 0.0,
-            "panda_joint2": -0.569,
-            "panda_joint3": 0.0,
-            "panda_joint4": -2.810,
-            "panda_joint5": 0.0,
-            "panda_joint6": 3.037,
-            "panda_joint7": 0.741,
-            "panda_finger_joint.*": 0.04,
-        },
-    ),
-    actuators={
-        "panda_shoulder": ImplicitActuatorCfg(
-            joint_names_expr=["panda_joint[1-4]"],
-            effort_limit=87.0,
-            velocity_limit=2.175,
-            stiffness=80.0,
-            damping=4.0,
-        ),
-        "panda_forearm": ImplicitActuatorCfg(
-            joint_names_expr=["panda_joint[5-7]"],
-            effort_limit=12.0,
-            velocity_limit=2.61,
-            stiffness=80.0,
-            damping=4.0,
-        ),
-        "panda_hand": ImplicitActuatorCfg(
-            joint_names_expr=["panda_finger_joint.*"],
-            effort_limit=200.0,
-            velocity_limit=0.2,
-            stiffness=2e3,
-            damping=1e2,
-        ),
-    },
-    soft_joint_pos_limit_factor=1.0,
-)
diff --git a/examples/lab/lab_assets/__init__.py b/examples/lab/lab_assets/__init__.py
index faa808e..260c508 100644
--- a/examples/lab/lab_assets/__init__.py
+++ b/examples/lab/lab_assets/__init__.py
@@ -13,4 +13,4 @@ import toml
 ##
 
 from .cartpole import *
-from .franka import *
+from .manipulators import *
diff --git a/examples/lab/lab_assets/franka.py b/examples/lab/lab_assets/franka.py
deleted file mode 100644
index 827e69a..0000000
--- a/examples/lab/lab_assets/franka.py
+++ /dev/null
@@ -1,87 +0,0 @@
-# Copyright (c) 2022-2024, The Isaac Lab Project Developers.
-# All rights reserved.
-#
-# SPDX-License-Identifier: BSD-3-Clause
-
-"""Configuration for the Franka Emika robots.
-
-The following configurations are available:
-
-* :obj:`FRANKA_PANDA_CFG`: Franka Emika Panda robot with Panda hand
-* :obj:`FRANKA_PANDA_HIGH_PD_CFG`: Franka Emika Panda robot with Panda hand with stiffer PD control
-
-Reference: https://github.com/frankaemika/franka_ros
-"""
-
-import omni.isaac.lab.sim as sim_utils
-from omni.isaac.lab.actuators import ImplicitActuatorCfg
-from omni.isaac.lab.assets.articulation import ArticulationCfg
-from omni.isaac.lab.utils.assets import ISAACLAB_NUCLEUS_DIR
-
-##
-# Configuration
-##
-
-FRANKA_PANDA_CFG = ArticulationCfg(
-    spawn=sim_utils.UsdFileCfg(
-        usd_path=f"{ISAACLAB_NUCLEUS_DIR}/Robots/FrankaEmika/panda_instanceable.usd",
-        activate_contact_sensors=True,
-        rigid_props=sim_utils.RigidBodyPropertiesCfg(
-            disable_gravity=False,
-            max_depenetration_velocity=5.0,
-        ),
-        articulation_props=sim_utils.ArticulationRootPropertiesCfg(
-            enabled_self_collisions=True, solver_position_iteration_count=8, solver_velocity_iteration_count=0
-        ),
-        # collision_props=sim_utils.CollisionPropertiesCfg(contact_offset=0.005, rest_offset=0.0),
-    ),
-    init_state=ArticulationCfg.InitialStateCfg(
-        joint_pos={
-            "panda_joint1": 0.0,
-            "panda_joint2": -0.569,
-            "panda_joint3": 0.0,
-            "panda_joint4": -2.810,
-            "panda_joint5": 0.0,
-            "panda_joint6": 3.037,
-            "panda_joint7": 0.741,
-            "panda_finger_joint.*": 0.04,
-        },
-    ),
-    actuators={
-        "panda_shoulder": ImplicitActuatorCfg(
-            joint_names_expr=["panda_joint[1-4]"],
-            effort_limit=87.0,
-            velocity_limit=2.175,
-            stiffness=80.0,
-            damping=4.0,
-        ),
-        "panda_forearm": ImplicitActuatorCfg(
-            joint_names_expr=["panda_joint[5-7]"],
-            effort_limit=12.0,
-            velocity_limit=2.61,
-            stiffness=80.0,
-            damping=4.0,
-        ),
-        "panda_hand": ImplicitActuatorCfg(
-            joint_names_expr=["panda_finger_joint.*"],
-            effort_limit=200.0,
-            velocity_limit=0.2,
-            stiffness=2e3,
-            damping=1e2,
-        ),
-    },
-    soft_joint_pos_limit_factor=1.0,
-)
-"""Configuration of Franka Emika Panda robot."""
-
-
-FRANKA_PANDA_HIGH_PD_CFG = FRANKA_PANDA_CFG.copy()
-FRANKA_PANDA_HIGH_PD_CFG.spawn.rigid_props.disable_gravity = True
-FRANKA_PANDA_HIGH_PD_CFG.actuators["panda_shoulder"].stiffness = 400.0
-FRANKA_PANDA_HIGH_PD_CFG.actuators["panda_shoulder"].damping = 80.0
-FRANKA_PANDA_HIGH_PD_CFG.actuators["panda_forearm"].stiffness = 400.0
-FRANKA_PANDA_HIGH_PD_CFG.actuators["panda_forearm"].damping = 80.0
-"""Configuration of Franka Emika Panda robot with stiffer PD control.
-
-This configuration is useful for task-space control using differential IK.
-"""
diff --git a/examples/lab/lab_assets/manipulators/franka/franka.py b/examples/lab/lab_assets/manipulators/franka/franka.py
index 132003c..d07a830 100644
--- a/examples/lab/lab_assets/manipulators/franka/franka.py
+++ b/examples/lab/lab_assets/manipulators/franka/franka.py
@@ -17,7 +17,10 @@ import omni.isaac.lab.sim as sim_utils
 from omni.isaac.lab.actuators import ImplicitActuatorCfg
 from omni.isaac.lab.assets.articulation import ArticulationCfg
 import os,sys
-ISAAC_TUTORIAL_PATH=os.environ['ISAAC_TUTORIAL_PATH']
+if os.environ.get("ISAAC_TUTORIAL_PATH") is None:
+    ISAAC_TUTORIAL_PATH = os.path.join(os.path.dirname(os.path.realpath(__file__)), "../../../")
+else:
+    ISAAC_TUTORIAL_PATH = os.environ["ISAAC_TUTORIAL_PATH"]
 
 ##
 # Configuration
@@ -26,7 +29,7 @@ ISAAC_TUTORIAL_PATH=os.environ['ISAAC_TUTORIAL_PATH']
 FRANKA_PANDA_CFG = ArticulationCfg(
     spawn=sim_utils.UsdFileCfg(
         usd_path=f"{ISAAC_TUTORIAL_PATH}/examples/lab/lab_assets/manipulators/franka/panda_instanceable.usd",
-        activate_contact_sensors=False,
+        activate_contact_sensors=True,
         rigid_props=sim_utils.RigidBodyPropertiesCfg(
             disable_gravity=False,
             max_depenetration_velocity=5.0,
@@ -34,7 +37,6 @@ FRANKA_PANDA_CFG = ArticulationCfg(
         articulation_props=sim_utils.ArticulationRootPropertiesCfg(
             enabled_self_collisions=True, solver_position_iteration_count=8, solver_velocity_iteration_count=0
         ),
-        # collision_props=sim_utils.CollisionPropertiesCfg(contact_offset=0.005, rest_offset=0.0),
     ),
     init_state=ArticulationCfg.InitialStateCfg(
         joint_pos={
diff --git a/examples/lab/lab_tasks/direct/cartpole/__init__.py b/examples/lab/lab_tasks/direct/cartpole/__init__.py
index e01fc04..19096b9 100644
--- a/examples/lab/lab_tasks/direct/cartpole/__init__.py
+++ b/examples/lab/lab_tasks/direct/cartpole/__init__.py
@@ -22,10 +22,9 @@ gym.register(
     disable_env_checker=True,
     kwargs={
         "env_cfg_entry_point": CartpoleEnvCfg,
-        "rl_games_cfg_entry_point": f"{agents.__name__}:rl_games_ppo_cfg.yaml",
-        "rsl_rl_cfg_entry_point": agents.rsl_rl_ppo_cfg.CartpolePPORunnerCfg,
-        "skrl_cfg_entry_point": f"{agents.__name__}:skrl_ppo_cfg.yaml",
-        "sb3_cfg_entry_point": f"{agents.__name__}:sb3_ppo_cfg.yaml",
+        "sb3_ppo_cfg_entry_point": f"{agents.__name__}:sb3_ppo_cfg.yaml",
+        "sb3_a2c_cfg_entry_point": f"{agents.__name__}:sb3_a2c_cfg.yaml",
+        "sb3_td3_cfg_entry_point": f"{agents.__name__}:sb3_td3_cfg.yaml",
+        "sb3_sac_cfg_entry_point": f"{agents.__name__}:sb3_sac_cfg.yaml",
     },
 )
-
diff --git a/examples/lab/lab_tasks/direct/cartpole/agents/sb3_ppo_cfg.yaml b/examples/lab/lab_tasks/direct/cartpole/agents/sb3_ppo_cfg.yaml
index 5856f35..01c25af 100644
--- a/examples/lab/lab_tasks/direct/cartpole/agents/sb3_ppo_cfg.yaml
+++ b/examples/lab/lab_tasks/direct/cartpole/agents/sb3_ppo_cfg.yaml
@@ -1,4 +1,5 @@
 # Reference: https://github.com/DLR-RM/rl-baselines3-zoo/blob/master/hyperparams/ppo.yml#L32
+#            https://stable-baselines3.readthedocs.io/en/master/modules/td3.html
 seed: 42
 
 n_timesteps: !!float 1e6
diff --git a/examples/lab/lab_tasks/manager_based/franka/config/franka/__init__.py b/examples/lab/lab_tasks/manager_based/franka/config/franka/__init__.py
index 698271b..e5ebb92 100644
--- a/examples/lab/lab_tasks/manager_based/franka/config/franka/__init__.py
+++ b/examples/lab/lab_tasks/manager_based/franka/config/franka/__init__.py
@@ -27,44 +27,6 @@ gym.register(
     disable_env_checker=True,
 )
 
-# gym.register(
-#     id="Isaac-Lift-Cube-Franka-v0",
-#     entry_point="omni.isaac.lab.envs:ManagerBasedRLEnv",
-#     kwargs={
-#         "env_cfg_entry_point": joint_pos_env_cfg.FrankaCubeLiftEnvCfg,
-#         "rsl_rl_cfg_entry_point": agents.rsl_rl_cfg.LiftCubePPORunnerCfg,
-#         "skrl_cfg_entry_point": f"{agents.__name__}:skrl_ppo_cfg.yaml",
-#         "rl_games_cfg_entry_point": f"{agents.__name__}:rl_games_ppo_cfg.yaml",
-#     },
-#     disable_env_checker=True,
-# )
-
-# gym.register(
-#     id="Isaac-Lift-Cube-Franka-Play-v0",
-#     entry_point="omni.isaac.lab.envs:ManagerBasedRLEnv",
-#     kwargs={
-#         "env_cfg_entry_point": joint_pos_env_cfg.FrankaCubeLiftEnvCfg_PLAY,
-#         "rsl_rl_cfg_entry_point": agents.rsl_rl_cfg.LiftCubePPORunnerCfg,
-#         "skrl_cfg_entry_point": f"{agents.__name__}:skrl_ppo_cfg.yaml",
-#         "rl_games_cfg_entry_point": f"{agents.__name__}:rl_games_ppo_cfg.yaml",
-#     },
-#     disable_env_checker=True,
-# )
-
-# ##
-# # Inverse Kinematics - Absolute Pose Control
-# ##
-
-# gym.register(
-#     id="Isaac-Lift-Cube-Franka-IK-Abs-v0",
-#     entry_point="omni.isaac.lab.envs:ManagerBasedRLEnv",
-#     kwargs={
-#         "env_cfg_entry_point": ik_abs_env_cfg.FrankaCubeLiftEnvCfg,
-#     },
-#     disable_env_checker=True,
-# )
-
-
 ##
 # Inverse Kinematics - Relative Pose Control
 ##
diff --git a/examples/lab/lab_tasks/manager_based/franka/config/franka/agents/rsl_rl_cfg.py b/examples/lab/lab_tasks/manager_based/franka/config/franka/agents/rsl_rl_cfg.py
index e575b73..6b6c131 100644
--- a/examples/lab/lab_tasks/manager_based/franka/config/franka/agents/rsl_rl_cfg.py
+++ b/examples/lab/lab_tasks/manager_based/franka/config/franka/agents/rsl_rl_cfg.py
@@ -16,7 +16,7 @@ from omni.isaac.lab_tasks.utils.wrappers.rsl_rl import (
 class LiftCubePPORunnerCfg(RslRlOnPolicyRunnerCfg):
     num_steps_per_env = 24
     max_iterations = 15000
-    save_interval = 100
+    save_interval = 3000
     experiment_name = "franka_lift"
     empirical_normalization = False
     policy = RslRlPpoActorCriticCfg(
diff --git a/examples/lab/lab_tasks/manager_based/franka/config/franka/ik_abs_env_cfg.py b/examples/lab/lab_tasks/manager_based/franka/config/franka/ik_abs_env_cfg.py
index 436405a..59302b1 100644
--- a/examples/lab/lab_tasks/manager_based/franka/config/franka/ik_abs_env_cfg.py
+++ b/examples/lab/lab_tasks/manager_based/franka/config/franka/ik_abs_env_cfg.py
@@ -16,7 +16,7 @@ from . import joint_pos_env_cfg
 import os, sys
 ISAAC_TUTORIAL_PATH=os.environ['ISAAC_TUTORIAL_PATH']
 sys.path.append(os.path.join(ISAAC_TUTORIAL_PATH, 'examples/lab'))
-from lab_assets.franka import FRANKA_PANDA_HIGH_PD_CFG  # isort: skip
+from lab_assets.manipulators.franka.franka import FRANKA_PANDA_HIGH_PD_CFG  # isort: skip
 
 
 @configclass
diff --git a/examples/lab/lab_tasks/manager_based/franka/config/franka/ik_rel_env_cfg.py b/examples/lab/lab_tasks/manager_based/franka/config/franka/ik_rel_env_cfg.py
index a354f10..c04be04 100644
--- a/examples/lab/lab_tasks/manager_based/franka/config/franka/ik_rel_env_cfg.py
+++ b/examples/lab/lab_tasks/manager_based/franka/config/franka/ik_rel_env_cfg.py
@@ -16,7 +16,7 @@ from . import joint_pos_env_cfg
 import os, sys
 ISAAC_TUTORIAL_PATH=os.environ['ISAAC_TUTORIAL_PATH']
 sys.path.append(os.path.join(ISAAC_TUTORIAL_PATH, 'examples/lab'))
-from lab_assets.franka import FRANKA_PANDA_HIGH_PD_CFG  # isort: skip
+from lab_assets.manipulators.franka.franka import FRANKA_PANDA_HIGH_PD_CFG  # isort: skip
 
 
 @configclass
diff --git a/examples/lab/lab_tasks/manager_based/franka/config/franka/joint_pos_env_cfg.py b/examples/lab/lab_tasks/manager_based/franka/config/franka/joint_pos_env_cfg.py
index 6967b1b..c56f408 100644
--- a/examples/lab/lab_tasks/manager_based/franka/config/franka/joint_pos_env_cfg.py
+++ b/examples/lab/lab_tasks/manager_based/franka/config/franka/joint_pos_env_cfg.py
@@ -24,7 +24,7 @@ from lab_tasks.manager_based.franka.lift_env_cfg import LiftEnvCfg
 # Pre-defined configs
 ##
 from omni.isaac.lab.markers.config import FRAME_MARKER_CFG  # isort: skip
-from lab_assets.franka import FRANKA_PANDA_CFG  # isort: skip
+from lab_assets.manipulators.franka.franka import FRANKA_PANDA_CFG  # isort: skip
 
 
 @configclass
diff --git a/examples/lab/workflows/sb3/play.py b/examples/lab/workflows/sb3/play.py
index 97fb588..e6d8d44 100644
--- a/examples/lab/workflows/sb3/play.py
+++ b/examples/lab/workflows/sb3/play.py
@@ -25,6 +25,7 @@ parser.add_argument(
     action="store_true",
     help="When no checkpoint provided, use the last saved model. Otherwise use the best saved model.",
 )
+parser.add_argument("--agent", type=str, default="PPO", help="RL Policy model to use.")
 # append AppLauncher cli args
 AppLauncher.add_app_launcher_args(parser)
 # parse the arguments
@@ -41,7 +42,7 @@ import numpy as np
 import os
 import torch
 
-from stable_baselines3 import PPO
+from stable_baselines3 import PPO, A2C, TD3, SAC
 from stable_baselines3.common.vec_env import VecNormalize
 
 # add isaac_tutorial task directory to sys.path
@@ -59,7 +60,20 @@ def main():
     env_cfg = parse_env_cfg(
         args_cli.task, use_gpu=not args_cli.cpu, num_envs=args_cli.num_envs, use_fabric=not args_cli.disable_fabric
     )
-    agent_cfg = load_cfg_from_registry(args_cli.task, "sb3_cfg_entry_point")
+    # choose the RL model
+    if args_cli.agent.lower() == "ppo":
+        Agent = PPO
+    elif args_cli.agent.lower() == "a2c":
+        Agent = A2C
+    elif args_cli.agent.lower() == "td3":
+        Agent = TD3
+    elif args_cli.agent.lower() == "sac":
+        Agent = SAC
+    else:
+        raise ValueError(f"Unsupported agent: {args_cli.agent}")
+
+    entry_point = f"sb3_{args_cli.agent.lower()}_cfg_entry_point"
+    agent_cfg = load_cfg_from_registry(args_cli.task, entry_point)
     # post-process agent configuration
     agent_cfg = process_sb3_cfg(agent_cfg)
 
@@ -94,7 +108,7 @@ def main():
         checkpoint_path = args_cli.checkpoint
     # create agent from stable baselines
     print(f"Loading checkpoint from: {checkpoint_path}")
-    agent = PPO.load(checkpoint_path, env, print_system_info=True)
+    agent = Agent.load(checkpoint_path, env, print_system_info=True)
 
     # reset environment
     obs = env.reset()
diff --git a/examples/lab/workflows/sb3/train.py b/examples/lab/workflows/sb3/train.py
index 3f0cc72..34c77c3 100644
--- a/examples/lab/workflows/sb3/train.py
+++ b/examples/lab/workflows/sb3/train.py
@@ -26,6 +26,7 @@ parser.add_argument("--num_envs", type=int, default=None, help="Number of enviro
 parser.add_argument("--task", type=str, default=None, help="Name of the task.")
 parser.add_argument("--seed", type=int, default=None, help="Seed used for the environment")
 parser.add_argument("--max_iterations", type=int, default=None, help="RL Policy training iterations.")
+parser.add_argument("--agent", type=str, default="PPO", help="RL Policy model to use.")
 # append AppLauncher cli args
 AppLauncher.add_app_launcher_args(parser)
 # parse the arguments
@@ -39,10 +40,10 @@ simulation_app = app_launcher.app
 
 import gymnasium as gym
 import numpy as np
-import os
+import os, sys
 from datetime import datetime
 
-from stable_baselines3 import PPO
+from stable_baselines3 import PPO, A2C, TD3, SAC
 from stable_baselines3.common.callbacks import CheckpointCallback
 from stable_baselines3.common.logger import configure
 from stable_baselines3.common.vec_env import VecNormalize
@@ -51,7 +52,6 @@ from omni.isaac.lab.utils.dict import print_dict
 from omni.isaac.lab.utils.io import dump_pickle, dump_yaml
 
 # add isaac_tutorial task directory to sys.path
-import os,sys
 ISAAC_TUTORIAL_PATH=os.environ['ISAAC_TUTORIAL_PATH']
 sys.path.append(os.path.join(ISAAC_TUTORIAL_PATH, 'examples/lab'))
 import lab_tasks  # noqa: F401
@@ -65,7 +65,20 @@ def main():
     env_cfg = parse_env_cfg(
         args_cli.task, use_gpu=not args_cli.cpu, num_envs=args_cli.num_envs, use_fabric=not args_cli.disable_fabric
     )
-    agent_cfg = load_cfg_from_registry(args_cli.task, "sb3_cfg_entry_point")
+    # choose the RL model
+    if args_cli.agent.lower() == "ppo":
+        Agent = PPO
+    elif args_cli.agent.lower() == "a2c":
+        Agent = A2C
+    elif args_cli.agent.lower() == "td3":
+        Agent = TD3
+    elif args_cli.agent.lower() == "sac":
+        Agent = SAC
+    else:
+        raise ValueError(f"Unsupported agent: {args_cli.agent}")
+
+    entry_point = f"sb3_{args_cli.agent.lower()}_cfg_entry_point"
+    agent_cfg = load_cfg_from_registry(args_cli.task, entry_point)
 
     # override configuration with command line arguments
     if args_cli.seed is not None:
@@ -98,7 +111,7 @@ def main():
     env.seed(seed=agent_cfg["seed"])
 
     # create agent from stable baselines
-    agent = PPO(policy_arch, env, verbose=1, **agent_cfg)
+    agent = Agent(policy_arch, env, verbose=1, **agent_cfg)
     # configure the logger
     new_logger = configure(log_dir, ["stdout", "tensorboard"])
     agent.set_logger(new_logger)
diff --git a/usd/duck/config.yaml b/usd/duck/config.yaml
index 0570cb7..5a7fc7a 100644
--- a/usd/duck/config.yaml
+++ b/usd/duck/config.yaml
@@ -1,5 +1,5 @@
-asset_path: /home/rise-jjm-ubuntu/Downloads/isaac_tutorial/examples/lab/../../mesh/duck.stl
-usd_dir: /home/rise-jjm-ubuntu/Downloads/isaac_tutorial/examples/lab/../../usd/duck
+asset_path: /home/rise-jjm-ubuntu/Workspace/isaac_tutorial/examples/lab/../../mesh/duck.stl
+usd_dir: /home/rise-jjm-ubuntu/Workspace/isaac_tutorial/examples/lab/../../usd/duck
 usd_file_name: duck.usd
 force_usd_conversion: true
 make_instanceable: false
@@ -30,5 +30,5 @@ collision_props:
   min_torsional_patch_radius: null
 collision_approximation: convexHull
 ##
-# Generated by MeshConverter on 2024-08-14 at 14:22:11.
+# Generated by MeshConverter on 2024-09-09 at 14:00:38.
 ##
diff --git a/usd/franka/.asset_hash b/usd/franka/.asset_hash
index 269ef90..726290e 100644
--- a/usd/franka/.asset_hash
+++ b/usd/franka/.asset_hash
@@ -1 +1 @@
-bc61d8645b85d97d40ff0e5a8b4f4b34
\ No newline at end of file
+c030b16780328eee5dc6cd4a75f8965b
\ No newline at end of file
diff --git a/usd/franka/Props/instanceable_meshes.usd b/usd/franka/Props/instanceable_meshes.usd
index c6ac61c..412e80b 100644
--- a/usd/franka/Props/instanceable_meshes.usd
+++ b/usd/franka/Props/instanceable_meshes.usd
@@ -1,3 +1,3 @@
 version https://git-lfs.github.com/spec/v1
-oid sha256:4478ac0742382912a45fa518bd52a25ac282eb40500dbd3a6a57adc9e214c6c8
-size 9746107
+oid sha256:5fc35b6d200e9670714569634378384741e410ff80a7501754b24b0bbe41a323
+size 9801276
diff --git a/usd/franka/config.yaml b/usd/franka/config.yaml
index d8921ca..a0fa916 100644
--- a/usd/franka/config.yaml
+++ b/usd/franka/config.yaml
@@ -1,5 +1,5 @@
-asset_path: /home/rise-jjm-ubuntu/Downloads/isaac_tutorial/examples/lab/../../urdf/franka_description/robots/franka_panda.urdf
-usd_dir: /home/rise-jjm-ubuntu/Downloads/isaac_tutorial/examples/lab/../../usd/franka
+asset_path: /home/rise-jjm-ubuntu/Workspace/isaac_tutorial/examples/lab/../../urdf/franka_description/robots/franka_panda.urdf
+usd_dir: /home/rise-jjm-ubuntu/Workspace/isaac_tutorial/examples/lab/../../usd/franka
 usd_file_name: franka_panda.usd
 force_usd_conversion: false
 make_instanceable: true
@@ -14,5 +14,5 @@ default_drive_damping: 0.0
 link_density: 0.0
 convex_decompose_mesh: false
 ##
-# Generated by UrdfConverter on 2024-07-03 at 16:25:13.
+# Generated by UrdfConverter on 2024-09-09 at 14:00:37.
 ##
diff --git a/usd/franka/franka_panda.usd b/usd/franka/franka_panda.usd
index 4d3714d..19d0759 100644
--- a/usd/franka/franka_panda.usd
+++ b/usd/franka/franka_panda.usd
@@ -1,3 +1,3 @@
 version https://git-lfs.github.com/spec/v1
-oid sha256:b9f86f9e8243231399da9d15dd67402607c29142167191094f0ad4d32c007954
-size 9759550
+oid sha256:7cc48e21a9812e9e223df93fc5ded243d53a7e39d9c8b3280fa0001d01a95ced
+size 9931631